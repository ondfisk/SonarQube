name: SonarQube

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

env:
  RESOURCE_GROUP_NAME: ondfisk
  LOCATION: northeurope
  SQL_SERVER_NAME: ondfisk
  SQL_DATABASE_NAME: SonarQube
  SQL_SERVER_LOGIN: sysadm

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    environment: Production

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Create Azure Resource Group
        uses: azure/CLI@v1
        with:
          inlineScript: |
            az group create --name ${{ env.RESOURCE_GROUP_NAME }} --location ${{ env.LOCATION }}

      - name: Validate Azure Resources
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          region: ${{ env.LOCATION }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./azuredeploy.bicep
          deploymentMode: Validate
          parameters: azuredeploy.parameters.json sqlServerPassword=${{ secrets.SQL_SERVER_PASSWORD }} sqlDatabasePassword=${{ secrets.SQL_DATABASE_PASSWORD }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - validate
    environment: Production

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Azure Resources
        uses: azure/arm-deploy@v1
        with:
          scope: resourcegroup
          region: ${{ env.LOCATION }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./azuredeploy.bicep
          deploymentMode: Incremental
          parameters: azuredeploy.parameters.json sqlServerPassword=${{ secrets.SQL_SERVER_PASSWORD }}
